# coding:utf-8
"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
"""


def get_factor_list(n):
    return filter(lambda x: n % x == 0, range(1, n + 1))
n = 0
cnt = 0
factor_num = 0
while True:
    cnt += 1

    if cnt % 2 == 0:
        factor_num1 = len(get_factor_list(cnt / 2))
        factor_num2 = len(get_factor_list(cnt + 1))
    else:
        factor_num1 = len(get_factor_list(cnt))
        factor_num2 = len(get_factor_list((cnt + 1) / 2))

    factor_num = factor_num1 * factor_num2
    if factor_num > 500:
        print cnt * (cnt + 1) / 2
        break
